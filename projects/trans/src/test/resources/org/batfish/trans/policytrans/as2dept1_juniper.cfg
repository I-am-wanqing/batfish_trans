system {
    syslog {
        time-format millisecond;  # 时间戳精确到毫秒
        file messages {
            any notice;
        }
        console any;
    }
    host-name as2dept1;
    internet-options {
        no-icmp-rate-limit;  # 禁用ICMP速率限制
        tcp-syn-wait-timeout 5;  # 设置TCP SYN等待超时为5秒
    }
    no-resolve-on-input;  # 禁用输入时的DNS解析
    domain-name lab.local;  # 设置域名
    interfaces {
        ml-ppp-options {
            bundle authenticated;  # 启用MLPPP捆绑认证
        }

        lo0 {
            unit 0 {
                family inet {
                    address 2.1.1.2/32;  # Loopback接口配置
                }
            }
        }
        ge-0/0/0 {
            description "Disabled Interface";
            disable;  # 关闭接口
        }
        ge-0/0/1 {
            description "GigabitEthernet0/0";
            unit 0 {
                family inet {
                    address 2.34.101.4/24;
                }
            }
            gigether-options {
                auto-negotiation;
            }
            speed 1g;
        }

        ge-0/0/2 {
            description "GigabitEthernet2/0";
            unit 0 {
                family inet {
                    address 2.128.0.1/24;
                    filter {
                        input RESTRICT_HOST_TRAFFIC_IN;
                        output RESTRICT_HOST_TRAFFIC_IN;
                    }
                }
            }
            gigether-options {
                auto-negotiation;
            }
        }

        ge-0/0/3 {
            description "GigabitEthernet3/0";
            unit 0 {
                family inet {
                    address 2.128.1.1/24;
                    filter {
                        input RESTRICT_HOST_TRAFFIC_IN;
                        output RESTRICT_HOST_TRAFFIC_OUT;
                    }
                }
            }
            gigether-options {
                auto-negotiation;
            }
        }

    }
    services {
        web-management {
            http;
            https;
        }
        ssh;
        telnet {
            connection-limit 5;
        }
    }
    ports {
        console {
            type vt100;
            insecure;
            timeout 0;
        }
    }
    login {
        user admin {
            class super-user;
            authentication encrypted-password "$6$salt$encrypted";  # 设置密码
        }
    }
    processes {
        ssh {
            rate-limit 5;
        }
    }
}

routing-options {
    static {
        route 2.128.0.0/24 discard;
        route 2.128.1.0/24 discard;
    }
    autonomous-system 65001;
}

protocols {
    bgp {
        group as2 {
            type external;
            local-address 2.1.4.1;
            peer-as 2;
            neighbor 2.34.101.3;
            neighbor 2.34.201.3;
            log-updown;
            family inet {
                unicast {
                    add-path {
                        send path-count 5;
                        receive;
                    }
                }
            }
            export dept_to_as2;
            import as2_to_dept;
            multipath {
                multiple-as;
                max-paths 5;
            }
            damping;
            community add;
        }
    }
    router-advertisement {
        interface all;
    }
}

policy-options {
    policy-statement dept_to_as2 {
        term 1 {
            from {
                route-filter 2.128.0.0/24 exact;
                route-filter 2.128.1.0/24 exact;
            }
            then {
                metric 50;
                community add 65001:2;
                accept;
            }
        }
    }
    policy-statement as2_to_dept {
        term 1 {
            from community as2_community;
            then {
                local-preference 350;
                accept;
            }
        }
    }
    community as2_community members _2:;
}

firewall {
    filter RESTRICT_HOST_TRAFFIC_IN {
        term PERMIT_INTERNAL {
            from {
                source-address {
                    2.128.0.0/16;    # 匹配源地址 2.128.0.0/16
                }
            }
            then accept;
        }
        term PERMIT_ICMP {
            from {
                protocol icmp;      # 允许所有ICMP流量
            }
            then accept;
        }
        term DENY_ALL {
            then {                 # 拒绝所有其他流量
                discard;
            }
        }
    }
    filter RESTRICT_HOST_TRAFFIC_OUT {
        term PERMIT_TO_INTERNAL {
            from {
                destination-address {
                    2.128.0.0/16;    # 允许访问目标网络 2.128.0.0/16
                }
            }
            then accept;
        }
        term BLOCK_CROSS_TRAFFIC {
            from {
                source-address {
                    1.128.0.0/16;    # 阻止 1.128.0.0/16 访问 2.128.0.0/16
                }
                destination-address {
                    2.128.0.0/16;
                }
            }
            then {
                discard;
            }
        }
        term DENY_ALL {
            then {                 # 拒绝所有其他流量
                syslog;
                discard;
            }
        }
    }
}